{"ast":null,"code":"import _slicedToArray from\"C:/Users/maali/React-Portfolio/React-Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{validateEmail}from\"../../utils/helpers\";// import { Link } from \"react-router-dom\";\n// import \"../css/Contact.css\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Contact(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];useEffect(function(){document.title=\"\".concat(props.title);});var handleInputChange=function handleInputChange(e){// Getting the value and name of the input which triggered the change\nvar target=e.target;var inputType=target.name;var inputValue=target.value;// Based on the input type, we set the state of either email, username, and password\nif(inputType===\"email\"){setEmail(inputValue);}else if(inputType===\"name\"){setName(inputValue);}else{setMessage(inputValue);}};var handleFormSubmit=function handleFormSubmit(e){e.preventDefault();// make sure inputs are not empty\nif(name.length===0){alert(\"You must enter a name\");return;}if(email.length===0){alert(\"You must enter a email\");return;}if(message.length===0){alert(\"You must enter a message\");return;}// check if it's a valid email\nif(!validateEmail(email)){alert(\"Please enter a valid email\");return;}alert(\"Thank you for your message, \".concat(name,\"!\"));// If everything goes according to plan, we want to clear out the input after a successful registration.\nsetName(\"\");setEmail(\"\");setMessage(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"backgroud\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"container col-xl-10 col-xxl-8 px-4 py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row align-items-center g-lg-5 py-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-7 text-center text-lg-start\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display-4 fw-bold lh-1 mb-3\",children:\"Contact Me\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"display-11\",children:\"Cell (301-751-6769)\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"display-11\",children:\"https://github.com/Maalie04/\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"display-11\",children:\" https://www.linkedin.com/in/jamaal-lawson-b40659201/alie04/  \"}),/*#__PURE__*/_jsx(\"h3\",{className:\"display-11\",children:\"  Email: maaliemaal@gmail.com   \"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10 mx-auto col-lg-5\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"p-4 p-md-5 border rounded-3 bg-light\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display-6 fw-bold\",children:props.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating mb-3\",children:[\"Enter Name\",/*#__PURE__*/_jsx(\"input\",{className:name?\"form-control m-1 valid\":\"form-control m-1 invalid\",name:\"name\",onChange:handleInputChange,value:name,type:\"text\",placeholder:\"Name\"})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-floating mb-3\",children:[\"Enter Email\",/*#__PURE__*/_jsx(\"input\",{className:email?\"form-control m-1 valid\":\"form-control m-1 invalid\",name:\"email\",value:email,onChange:handleInputChange,type:\"email\",placeholder:\"Email\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:message?\"form-control m-1 valid\":\"form-control m-1 invalid\",name:\"message\",value:message,onChange:handleInputChange,type:\"text\",required:\"true\",placeholder:\"Message\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mt-2 btn btn-primary\",onClick:handleFormSubmit,children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Submit name, email and message\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-signin\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(\"form\",{className:\"needs-validation\",action:\"POST\"})})})]});}","map":{"version":3,"sources":["C:/Users/maali/React-Portfolio/React-Portfolio/src/components/Pages/Contact.js"],"names":["React","useState","useEffect","validateEmail","Contact","props","name","setName","email","setEmail","message","setMessage","document","title","handleInputChange","e","target","inputType","inputValue","value","handleFormSubmit","preventDefault","length","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { validateEmail } from \"../../utils/helpers\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"../css/Contact.css\";\r\n\r\nexport default function Contact(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.title = `${props.title}`;\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    // Getting the value and name of the input which triggered the change\r\n    const { target } = e;\r\n    const inputType = target.name;\r\n    const inputValue = target.value;\r\n\r\n    // Based on the input type, we set the state of either email, username, and password\r\n    if (inputType === \"email\") {\r\n      setEmail(inputValue);\r\n    } else if (inputType === \"name\") {\r\n      setName(inputValue);\r\n    } else {\r\n      setMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // make sure inputs are not empty\r\n    if (name.length === 0) {\r\n      alert(\"You must enter a name\");\r\n      return;\r\n    }\r\n    if (email.length === 0) {\r\n      alert(\"You must enter a email\");\r\n      return;\r\n    }\r\n    if (message.length === 0) {\r\n      alert(\"You must enter a message\");\r\n      return;\r\n    }\r\n    // check if it's a valid email\r\n    if (!validateEmail(email)) {\r\n      alert(\"Please enter a valid email\");\r\n      return;\r\n    }\r\n\r\n    alert(`Thank you for your message, ${name}!`);\r\n\r\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"backgroud\">\r\n      <div className=\"container col-xl-10 col-xxl-8 px-4 py-5\">\r\n        <div className=\"row align-items-center g-lg-5 py-5\">\r\n          <div className=\"col-lg-7 text-center text-lg-start\">\r\n            <h1 className=\"display-4 fw-bold lh-1 mb-3\">Contact Me</h1>\r\n            <h3 className=\"display-11\">Cell (301-751-6769)</h3>\r\n\r\n            <h3 className=\"display-11\">https://github.com/Maalie04/</h3>\r\n           \r\n\r\n           \r\n            <h3 className=\"display-11\"> https://www.linkedin.com/in/jamaal-lawson-b40659201/alie04/  </h3>\r\n         \r\n\r\n            \r\n            <h3 className=\"display-11\">  Email: maaliemaal@gmail.com   </h3>\r\n          \r\n          </div>\r\n          <div className=\"col-md-10 mx-auto col-lg-5\">\r\n            <form className=\"p-4 p-md-5 border rounded-3 bg-light\">\r\n              <h1 className=\"display-6 fw-bold\">{props.title}</h1>\r\n\r\n              <div className=\"form-floating mb-3\">\r\n                Enter Name\r\n                <input\r\n                  className={\r\n                    name ? \"form-control m-1 valid\" : \"form-control m-1 invalid\"\r\n                  }\r\n                  name=\"name\"\r\n                  onChange={handleInputChange}\r\n                  value={name}\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                />\r\n              </div>\r\n              <div class=\"form-floating mb-3\">\r\n                Enter Email\r\n                <input\r\n                  className={\r\n                    email\r\n                      ? \"form-control m-1 valid\"\r\n                      : \"form-control m-1 invalid\"\r\n                  }\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleInputChange}\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"checkbox mb-3\">\r\n                <textarea\r\n                  className={\r\n                    message\r\n                      ? \"form-control m-1 valid\"\r\n                      : \"form-control m-1 invalid\"\r\n                  }\r\n                  name=\"message\"\r\n                  value={message}\r\n                  onChange={handleInputChange}\r\n                  type=\"text\"\r\n                  required=\"true\"\r\n                  placeholder=\"Message\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"mt-2 btn btn-primary\"\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Submit\r\n              </button>\r\n\r\n              <p className=\"text-muted\">Submit name, email and message</p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-signin\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <form className=\"needs-validation\" action=\"POST\"></form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}